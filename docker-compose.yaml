services:
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env_docker
    depends_on:
      - db
      - redis

  admin:
    build:
      context: ./adminpanel
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env_docker
    depends_on:
      - db
      - minio
      - redis
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PWD}
      - POSTGRES_USER=${DB_USER}
    env_file:
      - .env_docker
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    command: server /data --console-address ":9001"

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb minio/${MINIO_BUCKET};
      /usr/bin/mc policy set public minio/${MINIO_BUCKET};
      exit 0;
      "

volumes:
  db:
  minio-data:
  minio-config:
